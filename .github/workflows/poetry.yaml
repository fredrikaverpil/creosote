name: poetry

on:
  schedule:
    - cron: "0 9 * * *"
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - uses: fredrikaverpil/setup-pipx@v1.5
      - run: pipx install poetry
      - uses: fredrikaverpil/poetry-update@v1.2
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          delete-branch: true
          branch: poetry-update
          add-paths: |
            poetry.lock
          commit-message: "Update poetry dependencies"
          title: "Update poetry dependencies"
          body: |
            :warning: There is a risk that some production dependencies which are sub-dependencies of developer dependencies can be updated by this action. Always review `poetry.lock` carefully.

            ### `poetry update` log:
            
            - This follows the pinning rules set in `pyproject.toml`, meaning some dependencies are not updated without a change of pinning.
            - Note that some dependencies no longer used are also removed.

            ```bash
            ${{ env.POETRY_UPDATED }}
            ```

            ### Outdated dependencies _before_ this PR:

            ```bash
            ${{ env.POETRY_OUTDATED_BEFORE }}
            ```

            ### Outdated dependencies _after_ this PR:

            ```bash
            ${{ env.POETRY_OUTDATED_AFTER }}
            ```

